"""
Problem 2 - Even Fibonacci Numbers

Each new term in the Fibonacci sequence is generated by adding the previous
two terms. 

By starting with 1 and 2, the first 10 terms will be: 
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.
"""


def fib_sum(n: int) -> int:
    """
    Parameters
        n (int): maximum Fibonacci number
    Returns
        total (int): sum of Fibonacci numbers below n
    """

    n_curr = 1
    n_prev = 1
    total = 0

    while n_curr <= n:
        n_curr = n_curr + n_prev
        n_prev = n_curr - n_prev
        if n_curr % 2 == 0:
            total += n_curr
    return total


if __name__ == "__main__":
    print(
        "The sum of even-valued Fibonacci numbers below 4,000,000 is: "
        + str(fib_sum(4000000))
    )
